1. model 1 vs model 2
   1.1 model 1
       로직과 화면 기능이 섞여 있는 상태.
       코드 재사용성 및 유지보수가 힘들어짐.
       
       인수인계를 했다고 하더라도, 불안한 인수인계.
       인수인계를 받은 사람이 책임을 지게 됨.

       이러한 단점을 보완한 방식이 model 2 방식임.

   1.2 model 2
     - 특징
       각 기능이 분리되어 있어 개발 및 유지보수가 쉬움.
       각 기능(모듈)의 재사용성이 높음.
       디자이너와 개발자의 작업을 분업화해서 쉽게 개발할 수 있음.
       구조적으로 model1 과 차이점이 많아짐으로 개념의 학습이 필요.
     - 구조(아키텍처)
       MVC 패턴.

       M : Model, 비즈니스 로직을 처리.
       V : View, 클라이언트에게 보여줄 화면을 담당.
       C : Controller, 클라이언트의 요청 및 흐름 제어를 담당.
                       핵심은 컨트롤러임.

     - MVC 구성 요소와 기능
       Controller
         - Servlet 이 컨트롤러의 역할을 담당.
         - 클라이언트의 요청을 분석.
         - 해당 요청에 대해서 필요한 모델을 호출.
         - 모델에서 처리한 결과를 보여주기 위해서 JSP 를 선택.
       Model
         - 데이터베이스 연동과 같은 비즈니스 로직을 수행.
         - 일반적으로 DAO, VO 클래스로 이루어져 있음.
       View
         - JSP 가 화면 기능을 담당.
         - Model에서 처리한 결과를 화면에 표시.

     - Spring MVC 모델
       Controller - Service - Model - View













